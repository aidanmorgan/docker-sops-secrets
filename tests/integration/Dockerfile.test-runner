# Multi-stage build for test runner
# Stage 1: System dependencies
FROM ubuntu:22.04 as system-deps

# Set SOPS and age versions
ARG SOPS_VERSION=v3.10.2
ARG AGE_VERSION=v1.2.1
ARG ARCH=amd64

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    jq \
    docker.io \
    python3 \
    python3-pip \
    git \
    wget \
    ca-certificates \
    libssl-dev \
    libssl3 \
    coreutils \
    && rm -rf /var/lib/apt/lists/*

# Stage 2: Age installation
FROM system-deps as age-installer

# Install age
RUN set -eux; \
    curl -LO https://github.com/FiloSottile/age/releases/download/${AGE_VERSION}/age-${AGE_VERSION}-linux-${ARCH}.tar.gz; \
    tar -xzf age-${AGE_VERSION}-linux-${ARCH}.tar.gz; \
    mv age/age /usr/local/bin/age; \
    rm -rf age age-${AGE_VERSION}-linux-${ARCH}.tar.gz; \
    age --version

# Stage 3: SOPS installation
FROM age-installer as sops-installer

# Install SOPS with checksum verification
RUN set -eux; \
    # Download SOPS binary
    curl -LO https://github.com/getsops/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.linux.${ARCH}; \
    # Download checksums file
    curl -LO https://github.com/getsops/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.checksums.txt; \
    # Verify binary integrity using checksums file
    sha256sum -c sops-${SOPS_VERSION}.checksums.txt --ignore-missing; \
    # Install SOPS
    mv sops-${SOPS_VERSION}.linux.${ARCH} /usr/local/bin/sops; \
    chmod +x /usr/local/bin/sops; \
    # Verify installation
    sops --version

# Stage 4: Python dependencies
FROM sops-installer as python-deps
# Install Python dependencies for test automation
RUN pip3 install \
    requests \
    pytest \
    pytest-asyncio \
    docker \
    pyyaml \
    cryptography

# Stage 5: Final runtime stage
FROM python-deps as runtime

# Create test directories
RUN mkdir -p /tests /tmp/test-secrets /run/secrets

# Copy test scripts
COPY test_runner.py /tests/
COPY test_helpers.py /tests/
COPY test_scenarios.py /tests/
COPY conftest.py /tests/

# Make test scripts executable
RUN chmod +x /tests/test_runner.py

# Set working directory
WORKDIR /tests

# Default command
CMD ["python3", "test_runner.py"] 