# Multi-stage build for CLI binary
# Stage 1: Dependencies installation
FROM rust:slim-bookworm as deps

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy Cargo files
COPY Cargo.toml Cargo.lock ./

# Build dependencies only
RUN mkdir -p src && touch src/lib.rs
RUN cargo fetch

# Stage 2: Build stage with actual source code
FROM deps as builder

# Remove dummy files and copy real source
COPY src/ ./src/

# Build the actual CLI binary
RUN cargo build --release --bin sops-secrets-cli

# Stage 3: SOPS installation stage
FROM debian:bookworm-slim AS sops-installer

# Build arguments
ARG SOPS_VERSION=v3.10.2
ARG ARCH=amd64

# Install dependencies for SOPS installation
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    coreutils \
    && rm -rf /var/lib/apt/lists/*

# Download and install SOPS with verification following official instructions
RUN set -eux; \
    # Download SOPS binary
    curl -LO https://github.com/getsops/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.linux.${ARCH}; \
    # Download checksums file
    curl -LO https://github.com/getsops/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.checksums.txt; \
    # Verify binary integrity using checksums file
    sha256sum -c sops-${SOPS_VERSION}.checksums.txt --ignore-missing; \
    # Install SOPS
    mv sops-${SOPS_VERSION}.linux.${ARCH} /usr/local/bin/sops; \
    chmod +x /usr/local/bin/sops; \
    # Verify installation
    sops --version

# Stage 4: Runtime stage
FROM gcr.io/distroless/static-debian12:nonroot as runtime

# Copy SOPS binary from installer stage
COPY --from=sops-installer /usr/local/bin/sops /usr/local/bin/sops

# Copy the CLI binary
COPY --from=builder /app/target/release/sops-secrets-cli /usr/local/bin/sops-secrets-cli

# Set the entrypoint
ENTRYPOINT ["/usr/local/bin/sops-secrets-cli"] 